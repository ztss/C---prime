7.1.2 定义改进的sales_data类
   1.类的成员函数必须声明在类的内部，而成员函数的定义可以在外面。其中定义在类内部的函数
   是隐式的inline函数。
   2.我们考虑一个定义在类内部的成员函数，如下：
   string isbn() const {return bookNO; }。如果我们定义了这个类的一个对象。total。
   那么我们可以通过total.isbn()来调用成员函数。成员函数通过一个名为this的隐式参数来访
   问调用他的对象。即调用上面的函数等于this->bookNO。this是一个常量指针，我们不能改变
   this保存的地址。
   3.在2中的语句，成员函数参数列表后还跟着一个const。const的作用是修改隐式this指针的类
   型。如上所说this是一个指向类类型为非常量版本的常量指针，即顶层const。所以在默认情况
   下，我们不能把this绑定到一个常量对象上。这就会使得我们不能在常量对象上调用普通的成员
   函数。所以c++允许把const放在成员函数的参数列表后面，这个时候表表示this是一个指向常量
   的指针。而这种成员函数称为常量成员函数，代表这个函数不会修改类成员的值。(常量对象，以
   及常量对象的引用和指针都只能调用常量成员函数)。
   4.我们也可以在类的外部定义成员函数，如下：
   double Sales_data::avg_price() const {
     if(units_sold){
       return revenue/units_sold;
     }
     else{
       return 0;
     }
   }
   这里需要使用作用域运算符。
7.1.3 定义类相关的非成员函数
   1.如果函数在概念上属于类但是不定义在类中，那么一般应该和类声明在同一个文件中。即函数
   的声明应该与类在同一个头文件中。
