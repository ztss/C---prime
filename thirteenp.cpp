13. 拷贝控制
   1.定义一个类的时候，我们显式或者隐式的指定此类型的对象拷贝，移动，赋值和销毁时做什么。
   类通过定义这几种特殊的成员函数控制这些操作。包括拷贝赋值运算符，拷贝构造函数，移动构
   造函数，移动赋值运算符和析构函数。我们称这些操作为拷贝控制操作。
13.1 拷贝，赋值与销毁
13.1.1 拷贝构造函数
   1.如果一个构造函数的第一个参数是自身类类型的引用，且任何额外参数都有默认值，则此构造
   函数为拷贝构造函数。如下
   class Foo{
   public:
     Foo();//默认构造函数
     Foo(const Foo&);//拷贝构造函数
   };拷贝构造函数能够被隐式的使用，所以不应该是explicit的。
   2.拷贝初始化是依靠拷贝构造函数或者移动构造函数来完成的。一般会使用等于号。还有以下情
   况也会发生拷贝初始化：
   将一个对象作为实参传递给一个非引用类型的形参。
   从一个返回类型为非引用类型的函数返回一个对象
   用花括号列表初始化一个数组中的元素或者一个聚合类中的成员。
13.1.2 拷贝赋值运算符
   1.重载赋值运算符，如下
   class Foo{
   public:
     Foo& operator=(const Foo&);
   };
   2.如果一个类未定义自己的拷贝赋值运算符，编译器会生成一个合成拷贝赋值运算符。
13.1.3 析构函数
   1.析构函数执行与构造函数相反的操作，构造函数初始化对象的非static成员，还可能做一些其
   他的工作。析构函数释放对象使用的资源，并且销毁对象的非static数据成员。如下：
   class Foo{
   public:
     ~Foo();//析构函数
   };对于一个给定的类，只能有唯一的一个析构函数。
   2.在一个对象被销毁的时候，就会自动调用其析构函数
   变量在离开其作用域时被销毁
   当一个对象被销毁的时候，其成员被销毁
   容器被销毁，其元素被销毁
   对于动态分配的对象，当对指向它的指针应用delete运算符时被销毁
   对于临时对象，当创建它的完整表达式结束的时候被销毁
   3.当一个类未定义自己的析构函数时，编译器会为它定义一个合成析构函数。合成析构函数一般
   函数体是空的。
